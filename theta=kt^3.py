# -*- coding: utf-8 -*-
"""theta=kt^3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TziwZmUkUqS7Swn_UFgt4pY2ndbDSfzO
"""

#for the case of theta=k*t
import scipy as sc
from scipy.integrate import odeint
import numpy as np
import matplotlib.pyplot as plt

t=np.linspace(0,2,100)
theta=list()
theta2=list()
theta3=list()
k=5
m1=1
m5=2
l4=list() #if l4 is changing with time
l2=7
l1=6
l3=10
theta3dot=list()
theta2dot=list()
for j in range(0,len(t)):
  theta.append(k*(j**3))

for i in range(0,len(t)):
  theta2=np.arcsin(m5*np.sin(theta)/np.sqrt(m1**2 + 2*m1*m5*np.cos(theta)+m5**2))
#for y in range(0,len(t)):
#  theta2dot=                        #d(theta2)/dt nikal kar above eqn se idhar likh de or uncomment kar de
for x in range(0,len(t)):
  l4=l2+l3*np.sin(theta2-np.arcsin(l1/l3*np.sin(theta2)))/np.sin(theta2)
for k in range(0,len(t)):
  theta3=np.arccos((l1+(l4-l2)*np.cos(theta2))/np.sqrt(l1**2 + (l4-l2)**2+2*l1*(l4-l2)*np.cos(theta2)))
#for f in range(0,len(t)):
 # theta3dot=(l2-l4)*np.cos(theta2*2)*theta2dot/(l3*np.cos(theta3-theta2)) ye bhi
#ek theta3 ko double differetiate karke eqn bhejde phir angular acceleration ho jayega
plt.plot(t,theta3)
plt.xlabel('Theta3')
plt.ylabel('time')
plt.show()
plt.plot(t,l4)
plt.xlabel('l4')
plt.ylabel('time')
plt.show()
#plt.plot(t,theta3dot)
#plt.show()                  when you fill theta2dot then uncomment these lines