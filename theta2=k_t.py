# -*- coding: utf-8 -*-
"""theta2=k*t.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X2qZgEAn_GmTmh-PHlnT6dT93hjAgslQ
"""

#for the case of theta=k*t
import scipy as sc
from scipy.integrate import odeint
import numpy as np
import matplotlib.pyplot as plt
from sympy import *
t=np.linspace(0,20,5000)
#theta=list()
theta2=list()
theta3=list()
k=0.067
m1=5
m5=4
l4=list() #if l4 is changing with time
l2=7
l1=10
l3=10.5
theta3dot=list()
theta2dot=list()
l4dot=list()
#for j in range(0,len(t)):
 # theta.append(k*(j**2))

for i in range(0,len(t)):
  theta2.append(0.523599+k*t[i])

for k in range(0,len(t)):
  theta3=theta2-np.arcsin(l1/l3*np.sin(theta2))
for x in range(0,len(t)):
  l4=l2+l3*np.sin(theta3)/np.sin(theta2)
for f in range(0,len(t)):
  theta3dot=(l2-l4)*np.cos(np.dot(2,theta2))*k/(l3*np.cos(theta3-theta2)) 
#for z in range(0,len(t)):
 # l4dot=(l4-l2)/np.cos(theta2)*k*(np.sin(theta2)+np.sin(theta3)*np.cos(np.dot(2,theta2))/(np.cos(theta2)*np.cos(theta3-theta2)))
for d in range(0,len(t)):
  theta3dd=(l2-l4)*((2*np.cos(theta2)**2-1)/2*(k)*l3*np.sin(theta3-theta2)*(theta3dot-k))
plt.plot(t,theta3)
plt.xlabel('time(in seconds)')
plt.ylabel(r'${\theta}_3$')
plt.show()
plt.plot(t,l4)
plt.xlabel('time(in seconds)')
plt.ylabel(r'$L_4$')
plt.show()
plt.plot(t,theta3dot)
plt.xlabel('time(in seconds)')
plt.ylabel(r'$\dot{\theta}_3$')
plt.show()
#plt.plot(t,l4dot)
#plt.xlabel('time')
#plt.ylabel('Rate of change of L4')
#plt.show()     
plt.plot(t,theta3dd)
plt.xlabel('time(in seconds)')
plt.ylabel(r'$\ddot{\theta}_3$')
plt.show()
plt.plot(t,theta2)
plt.ylabel(r'${\theta}_2$')
plt.xlabel('time')
plt.show()